{"version":3,"file":"dnd-kit-sortable-tree.esm.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/ui/simple/SimpleTreeItemWrapper.tsx","../src/ui/folder/FolderTreeItemWrapper.tsx","../src/utilities.ts","../src/SortableTreeItem.tsx","../src/SortingStrategy.ts","../src/SortableTree.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import clsx from 'clsx';\r\nimport React, { forwardRef } from 'react';\r\nimport type { TreeItemComponentProps } from '../../types';\r\nimport './SimpleTreeItemWrapper.css';\r\n\r\nexport const SimpleTreeItemWrapper = forwardRef<\r\n  HTMLDivElement,\r\n  React.PropsWithChildren<TreeItemComponentProps<{}>>\r\n>((props, ref) => {\r\n  const {\r\n    clone,\r\n    depth,\r\n    disableSelection,\r\n    disableInteraction,\r\n    disableSorting,\r\n    ghost,\r\n    handleProps,\r\n    indentationWidth,\r\n    indicator,\r\n    collapsed,\r\n    onCollapse,\r\n    onRemove,\r\n    item,\r\n    wrapperRef,\r\n    style,\r\n    hideCollapseButton,\r\n    childCount,\r\n    manualDrag,\r\n    showDragHandle,\r\n    disableCollapseOnItemClick,\r\n    isLast,\r\n    parent,\r\n    className,\r\n    contentClassName,\r\n    isOver,\r\n    isOverParent,\r\n    ...rest\r\n  } = props;\r\n\r\n  return (\r\n    <li\r\n      ref={wrapperRef}\r\n      {...rest}\r\n      className={clsx(\r\n        'dnd-sortable-tree_simple_wrapper',\r\n        clone && 'dnd-sortable-tree_simple_clone',\r\n        ghost && 'dnd-sortable-tree_simple_ghost',\r\n        disableSelection && 'dnd-sortable-tree_simple_disable-selection',\r\n        disableInteraction && 'dnd-sortable-tree_simple_disable-interaction',\r\n        className\r\n      )}\r\n      style={{\r\n        ...style,\r\n        paddingLeft: clone ? indentationWidth : indentationWidth * depth,\r\n      }}\r\n    >\r\n      <div\r\n        className={clsx('dnd-sortable-tree_simple_tree-item', contentClassName)}\r\n        ref={ref}\r\n        {...(manualDrag ? undefined : handleProps)}\r\n        onClick={disableCollapseOnItemClick ? undefined : onCollapse}\r\n      >\r\n        {!disableSorting && showDragHandle !== false && (\r\n          <div className={'dnd-sortable-tree_simple_handle'} {...handleProps} />\r\n        )}\r\n        {!manualDrag && !hideCollapseButton && !!onCollapse && !!childCount && (\r\n          <button\r\n            onClick={(e) => {\r\n              if (!disableCollapseOnItemClick) {\r\n                return;\r\n              }\r\n              e.preventDefault();\r\n              onCollapse?.();\r\n            }}\r\n            className={clsx(\r\n              'dnd-sortable-tree_simple_tree-item-collapse_button',\r\n              collapsed &&\r\n                'dnd-sortable-tree_folder_simple-item-collapse_button-collapsed'\r\n            )}\r\n          />\r\n        )}\r\n        {props.children}\r\n      </div>\r\n    </li>\r\n  );\r\n}) as <T>(\r\n  p: React.PropsWithChildren<\r\n    TreeItemComponentProps<T> & React.RefAttributes<HTMLDivElement>\r\n  >\r\n) => React.ReactElement;\r\n","import clsx from 'clsx';\r\nimport React, { forwardRef } from 'react';\r\nimport type { TreeItemComponentProps, FlattenedItem } from '../../types';\r\nimport './FolderTreeItemWrapper.css';\r\n\r\nfunction flattenParents<T>(\r\n  parent: FlattenedItem<T> | null\r\n): FlattenedItem<T>[] {\r\n  if (!parent) return [];\r\n  return [...flattenParents(parent.parent), parent];\r\n}\r\n\r\nexport const FolderTreeItemWrapper = forwardRef<\r\n  HTMLDivElement,\r\n  React.PropsWithChildren<TreeItemComponentProps<{}>>\r\n>((props, ref) => {\r\n  const {\r\n    clone,\r\n    depth,\r\n    disableSelection,\r\n    disableInteraction,\r\n    disableSorting,\r\n    ghost,\r\n    handleProps,\r\n    indentationWidth,\r\n    indicator,\r\n    collapsed,\r\n    onCollapse,\r\n    onRemove,\r\n    item,\r\n    wrapperRef,\r\n    style,\r\n    isLast,\r\n    parent,\r\n    hideCollapseButton,\r\n    childCount,\r\n    manualDrag,\r\n    showDragHandle,\r\n    disableCollapseOnItemClick,\r\n    className,\r\n    contentClassName,\r\n    isOver,\r\n    isOverParent,\r\n    ...rest\r\n  } = props;\r\n\r\n  const flattenedParents = flattenParents(parent);\r\n  return (\r\n    <li\r\n      {...rest}\r\n      className={clsx(\r\n        'dnd-sortable-tree_folder_wrapper',\r\n        clone && 'dnd-sortable-tree_folder_clone',\r\n        ghost && 'dnd-sortable-tree_folder_ghost',\r\n        disableSelection && 'dnd-sortable-tree_folder_disable-selection',\r\n        disableInteraction && 'dnd-sortable-tree_folder_disable-interaction',\r\n        className\r\n      )}\r\n      ref={wrapperRef}\r\n      style={style}\r\n    >\r\n      {flattenedParents.map((item) => (\r\n        <div\r\n          key={item.id}\r\n          className={\r\n            item.isLast\r\n              ? 'dnd-sortable-tree_folder_line-last'\r\n              : 'dnd-sortable-tree_folder_line'\r\n          }\r\n        />\r\n      ))}\r\n      <div\r\n        className={\r\n          isLast\r\n            ? 'dnd-sortable-tree_folder_line-to_self-last'\r\n            : 'dnd-sortable-tree_folder_line-to_self'\r\n        }\r\n      />\r\n      {manualDrag && showDragHandle && !disableSorting && (\r\n        <div className={'dnd-sortable-tree_folder_handle'} {...handleProps} />\r\n      )}\r\n      {!manualDrag && !hideCollapseButton && !!onCollapse && !!childCount && (\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            onCollapse?.();\r\n          }}\r\n          className={clsx(\r\n            'dnd-sortable-tree_folder_tree-item-collapse_button',\r\n            collapsed &&\r\n              'dnd-sortable-tree_folder_tree-item-collapse_button-collapsed'\r\n          )}\r\n        />\r\n      )}\r\n      <div\r\n        className={clsx('dnd-sortable-tree_folder_tree-item', contentClassName)}\r\n        ref={ref}\r\n        {...(manualDrag ? undefined : handleProps)}\r\n        onClick={disableCollapseOnItemClick ? undefined : onCollapse}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </li>\r\n  );\r\n}) as <T>(\r\n  p: React.PropsWithChildren<\r\n    TreeItemComponentProps<T> & React.RefAttributes<HTMLDivElement>\r\n  >\r\n) => React.ReactElement;\r\n","import { arrayMove } from '@dnd-kit/sortable';\r\n\r\nimport type { FlattenedItem, TreeItem, TreeItems } from './types';\r\nimport { UniqueIdentifier } from '@dnd-kit/core';\r\n\r\nexport const iOS =\r\n  typeof window !== 'undefined'\r\n    ? /iPad|iPhone|iPod/.test(navigator.platform)\r\n    : false;\r\n\r\nfunction getDragDepth(offset: number, indentationWidth: number) {\r\n  return Math.round(offset / indentationWidth);\r\n}\r\n\r\nlet _revertLastChanges = () => {};\r\nexport function getProjection<T>(\r\n  items: FlattenedItem<T>[],\r\n  activeId: UniqueIdentifier | null,\r\n  overId: UniqueIdentifier | null,\r\n  dragOffset: number,\r\n  indentationWidth: number,\r\n  keepGhostInPlace: boolean,\r\n  canRootHaveChildren?: boolean | ((dragItem: FlattenedItem<T>) => boolean)\r\n): {\r\n  depth: number;\r\n  parentId: UniqueIdentifier | null;\r\n  parent: FlattenedItem<T> | null;\r\n  isLast: boolean;\r\n} | null {\r\n  _revertLastChanges();\r\n  _revertLastChanges = () => {};\r\n  if (!activeId || !overId) return null;\r\n\r\n  const overItemIndex = items.findIndex(({ id }) => id === overId);\r\n  const activeItemIndex = items.findIndex(({ id }) => id === activeId);\r\n  const activeItem = items[activeItemIndex];\r\n  if (keepGhostInPlace) {\r\n    let parent: FlattenedItem<T> | null | undefined = items[overItemIndex];\r\n    parent = findParentWhichCanHaveChildren(\r\n      parent,\r\n      activeItem,\r\n      canRootHaveChildren\r\n    );\r\n    if (parent === undefined) return null;\r\n    return {\r\n      depth: parent?.depth ?? 0 + 1,\r\n      parentId: parent?.id ?? null,\r\n      parent: parent,\r\n      isLast: !!parent?.isLast,\r\n    };\r\n  }\r\n  const newItems = arrayMove(items, activeItemIndex, overItemIndex);\r\n  const previousItem = newItems[overItemIndex - 1];\r\n  const nextItem = newItems[overItemIndex + 1];\r\n  const dragDepth = getDragDepth(dragOffset, indentationWidth);\r\n  const projectedDepth = activeItem.depth + dragDepth;\r\n\r\n  let depth = projectedDepth;\r\n  let directParent = findParentWithDepth(depth - 1, previousItem);\r\n  let parent = findParentWhichCanHaveChildren(\r\n    directParent,\r\n    activeItem,\r\n    canRootHaveChildren\r\n  );\r\n  if (parent === undefined) return null;\r\n  const maxDepth = (parent?.depth ?? -1) + 1;\r\n  const minDepth = nextItem?.depth ?? 0;\r\n  if (minDepth > maxDepth) return null;\r\n  if (depth >= maxDepth) {\r\n    depth = maxDepth;\r\n  } else if (depth < minDepth) {\r\n    depth = minDepth;\r\n  }\r\n  const isLast = (nextItem?.depth ?? -1) < depth;\r\n\r\n  if (parent && parent.isLast) {\r\n    _revertLastChanges = () => {\r\n      parent!.isLast = true;\r\n    };\r\n    parent.isLast = false;\r\n  }\r\n  return {\r\n    depth,\r\n    parentId: getParentId(),\r\n    parent,\r\n    isLast,\r\n  };\r\n\r\n  function findParentWithDepth(depth: number, previousItem: FlattenedItem<T>) {\r\n    if (!previousItem) return null;\r\n    while (depth < previousItem.depth) {\r\n      if (previousItem.parent === null) return null;\r\n      previousItem = previousItem.parent;\r\n    }\r\n    return previousItem;\r\n  }\r\n  function findParentWhichCanHaveChildren(\r\n    parent: FlattenedItem<T> | null,\r\n    dragItem: FlattenedItem<T>,\r\n    canRootHaveChildren?: boolean | ((dragItem: FlattenedItem<T>) => boolean)\r\n  ): FlattenedItem<T> | null | undefined {\r\n    if (!parent) {\r\n      const rootCanHaveChildren =\r\n        typeof canRootHaveChildren === 'function'\r\n          ? canRootHaveChildren(dragItem)\r\n          : canRootHaveChildren;\r\n      if (rootCanHaveChildren === false) return undefined;\r\n      return parent;\r\n    }\r\n    const canHaveChildren =\r\n      typeof parent.canHaveChildren === 'function'\r\n        ? parent.canHaveChildren(dragItem)\r\n        : parent.canHaveChildren;\r\n    if (canHaveChildren === false)\r\n      return findParentWhichCanHaveChildren(\r\n        parent.parent,\r\n        activeItem,\r\n        canRootHaveChildren\r\n      );\r\n    return parent;\r\n  }\r\n\r\n  function getParentId() {\r\n    if (depth === 0 || !previousItem) {\r\n      return null;\r\n    }\r\n\r\n    if (depth === previousItem.depth) {\r\n      return previousItem.parentId;\r\n    }\r\n\r\n    if (depth > previousItem.depth) {\r\n      return previousItem.id;\r\n    }\r\n\r\n    const newParent = newItems\r\n      .slice(0, overItemIndex)\r\n      .reverse()\r\n      .find((item) => item.depth === depth)?.parentId;\r\n\r\n    return newParent ?? null;\r\n  }\r\n}\r\n\r\nfunction flatten<T extends Record<string, any>>(\r\n  items: TreeItems<T>,\r\n  parentId: UniqueIdentifier | null = null,\r\n  depth = 0,\r\n  parent: FlattenedItem<T> | null = null\r\n): FlattenedItem<T>[] {\r\n  return items.reduce<FlattenedItem<T>[]>((acc, item, index) => {\r\n    const flattenedItem: FlattenedItem<T> = {\r\n      ...item,\r\n      parentId,\r\n      depth,\r\n      index,\r\n      isLast: items.length === index + 1,\r\n      parent: parent,\r\n    };\r\n    return [\r\n      ...acc,\r\n      flattenedItem,\r\n      ...flatten(item.children ?? [], item.id, depth + 1, flattenedItem),\r\n    ];\r\n  }, []);\r\n}\r\n\r\nexport function flattenTree<T extends Record<string, any>>(\r\n  items: TreeItems<T>\r\n): FlattenedItem<T>[] {\r\n  return flatten(items);\r\n}\r\n\r\nexport function buildTree<T extends Record<string, any>>(\r\n  flattenedItems: FlattenedItem<T>[]\r\n): TreeItems<T> {\r\n  const root: TreeItem<T> = { id: 'root', children: [] } as any;\r\n  const nodes: Record<string, TreeItem<T>> = { [root.id]: root };\r\n  const items = flattenedItems.map((item) => ({ ...item, children: [] }));\r\n\r\n  for (const item of items) {\r\n    const { id } = item;\r\n    const parentId = item.parentId ?? root.id;\r\n    const parent = nodes[parentId] ?? findItem(items, parentId);\r\n    item.parent = null;\r\n    nodes[id] = item;\r\n    parent?.children?.push(item);\r\n  }\r\n\r\n  return root.children ?? [];\r\n}\r\n\r\nexport function findItem<T>(items: TreeItem<T>[], itemId: UniqueIdentifier) {\r\n  return items.find(({ id }) => id === itemId);\r\n}\r\n\r\nexport function findItemDeep<T extends Record<string, any>>(\r\n  items: TreeItems<T>,\r\n  itemId: UniqueIdentifier\r\n): TreeItem<T> | undefined {\r\n  for (const item of items) {\r\n    const { id, children } = item;\r\n\r\n    if (id === itemId) {\r\n      return item;\r\n    }\r\n\r\n    if (children?.length) {\r\n      const child = findItemDeep(children, itemId);\r\n\r\n      if (child) {\r\n        return child;\r\n      }\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport function removeItem<T extends Record<string, any>>(\r\n  items: TreeItems<T>,\r\n  id: string\r\n) {\r\n  const newItems = [];\r\n\r\n  for (const item of items) {\r\n    if (item.id === id) {\r\n      continue;\r\n    }\r\n\r\n    if (item.children?.length) {\r\n      item.children = removeItem(item.children, id);\r\n    }\r\n\r\n    newItems.push(item);\r\n  }\r\n\r\n  return newItems;\r\n}\r\n\r\nexport function setProperty<\r\n  TData extends Record<string, any>,\r\n  T extends keyof TreeItem<TData>\r\n>(\r\n  items: TreeItems<TData>,\r\n  id: string,\r\n  property: T,\r\n  setter: (value: TreeItem<TData>[T]) => TreeItem<TData>[T]\r\n) {\r\n  for (const item of items) {\r\n    if (item.id === id) {\r\n      item[property] = setter(item[property]);\r\n      continue;\r\n    }\r\n\r\n    if (item.children?.length) {\r\n      item.children = setProperty(item.children, id, property, setter);\r\n    }\r\n  }\r\n\r\n  return [...items];\r\n}\r\n\r\nfunction countChildren<T>(items: TreeItem<T>[], count = 0): number {\r\n  return items.reduce((acc, { children }) => {\r\n    if (children?.length) {\r\n      return countChildren(children, acc + 1);\r\n    }\r\n\r\n    return acc + 1;\r\n  }, count);\r\n}\r\n\r\nexport function getChildCount<T extends Record<string, any>>(\r\n  items: TreeItems<T>,\r\n  id: UniqueIdentifier\r\n) {\r\n  if (!id) {\r\n    return 0;\r\n  }\r\n\r\n  const item = findItemDeep(items, id);\r\n\r\n  return item ? countChildren(item.children ?? []) : 0;\r\n}\r\n\r\nexport function removeChildrenOf<T>(\r\n  items: FlattenedItem<T>[],\r\n  ids: UniqueIdentifier[]\r\n) {\r\n  const excludeParentIds = [...ids];\r\n\r\n  return items.filter((item) => {\r\n    if (item.parentId && excludeParentIds.includes(item.parentId)) {\r\n      if (item.children?.length) {\r\n        excludeParentIds.push(item.id);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  });\r\n}\r\n\r\nexport function getIsOverParent<T>(\r\n  parent: FlattenedItem<T> | null,\r\n  overId: UniqueIdentifier\r\n): boolean {\r\n  if (!parent || !overId) return false;\r\n  if (parent.id === overId) return true;\r\n  return getIsOverParent(parent.parent, overId);\r\n}\r\n","import React, { CSSProperties, HTMLAttributes, useMemo } from 'react';\nimport {\n  AnimateLayoutChanges,\n  UseSortableArguments,\n  useSortable,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\n\nimport { getIsOverParent, iOS } from './utilities';\nimport type { FlattenedItem, TreeItem, TreeItemComponentType } from './types';\nimport { UniqueIdentifier } from '@dnd-kit/core';\n\nexport interface TreeItemProps<T> extends HTMLAttributes<HTMLLIElement> {\n  childCount?: number;\n  clone?: boolean;\n  collapsed?: boolean;\n  depth: number;\n  disableInteraction?: boolean;\n  disableSelection?: boolean;\n  ghost?: boolean;\n  handleProps?: any;\n  indicator?: boolean;\n  indentationWidth: number;\n  item: TreeItem<T>;\n  isLast: boolean;\n  parent: FlattenedItem<T> | null;\n  onCollapse?(id: UniqueIdentifier): void;\n\n  onRemove?(id: UniqueIdentifier): void;\n\n  wrapperRef?(node: HTMLLIElement): void;\n}\n\nconst animateLayoutChanges: AnimateLayoutChanges = ({\n  isSorting,\n  isDragging,\n}) => (isSorting || isDragging ? false : true);\n\ntype SortableTreeItemProps<\n  T,\n  TElement extends HTMLElement\n> = TreeItemProps<T> & {\n  id: string;\n  TreeItemComponent: TreeItemComponentType<T, TElement>;\n  disableSorting?: boolean;\n  sortableProps?: Omit<UseSortableArguments, 'id'>;\n  keepGhostInPlace?: boolean;\n};\n\nconst SortableTreeItemNotMemoized = function SortableTreeItem<\n  T,\n  TElement extends HTMLElement\n>({\n  id,\n  depth,\n  isLast,\n  TreeItemComponent,\n  parent,\n  disableSorting,\n  sortableProps,\n  keepGhostInPlace,\n  ...props\n}: SortableTreeItemProps<T, TElement>) {\n  const {\n    attributes,\n    isDragging,\n    isSorting,\n    listeners,\n    setDraggableNodeRef,\n    setDroppableNodeRef,\n    transform,\n    transition,\n    isOver,\n    over,\n  } = useSortable({\n    id,\n    animateLayoutChanges,\n    disabled: disableSorting,\n    ...sortableProps,\n  });\n  const isOverParent = useMemo(\n    () => !!over?.id && getIsOverParent(parent, over.id),\n    [over?.id]\n  );\n  const style: CSSProperties = {\n    transform: CSS.Translate.toString(transform),\n    transition: transition ?? undefined,\n  };\n  const localCollapse = useMemo(() => {\n    if (!props.onCollapse) return undefined;\n    return () => props.onCollapse?.(props.item.id);\n  }, [props.item.id, props.onCollapse]);\n\n  const localRemove = useMemo(() => {\n    if (!props.onRemove) return undefined;\n\n    return () => props.onRemove?.(props.item.id);\n  }, [props.item.id, props.onRemove]);\n  return (\n    <TreeItemComponent\n      {...props}\n      ref={setDraggableNodeRef}\n      wrapperRef={setDroppableNodeRef}\n      style={keepGhostInPlace ? undefined : style}\n      depth={depth}\n      ghost={isDragging}\n      disableSelection={iOS}\n      disableInteraction={isSorting}\n      isLast={isLast}\n      parent={parent}\n      handleProps={{\n        ...attributes,\n        ...listeners,\n      }}\n      onCollapse={localCollapse}\n      onRemove={localRemove}\n      disableSorting={disableSorting}\n      isOver={isOver}\n      isOverParent={isOverParent}\n    />\n  );\n};\n\nexport const SortableTreeItem = React.memo(\n  SortableTreeItemNotMemoized\n) as typeof SortableTreeItemNotMemoized;\n","import {\n  SortingStrategy,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nexport const customListSortingStrategy = (\n  isValid: (activeIndex: any, overIndex: any) => boolean\n): SortingStrategy => {\n  const sortingStrategy: SortingStrategy = ({\n    activeIndex,\n    activeNodeRect,\n    index,\n    rects,\n    overIndex,\n  }) => {\n    if (isValid(activeIndex, overIndex)) {\n      return verticalListSortingStrategy({\n        activeIndex,\n        activeNodeRect,\n        index,\n        rects,\n        overIndex,\n      });\n    }\n    return null;\n  };\n  return sortingStrategy;\n};\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport {\r\n  Announcements,\r\n  closestCenter,\r\n  defaultDropAnimation,\r\n  DndContext,\r\n  DragEndEvent,\r\n  DragMoveEvent,\r\n  DragOverEvent,\r\n  DragOverlay,\r\n  DragStartEvent,\r\n  DropAnimation,\r\n  // MeasuringStrategy,\r\n  // KeyboardSensor,\r\n  Modifier,\r\n  PointerSensor,\r\n  PointerSensorOptions,\r\n  UniqueIdentifier,\r\n  useSensor,\r\n  useSensors,\r\n} from '@dnd-kit/core';\r\nimport { CSS } from '@dnd-kit/utilities';\r\nimport {\r\n  arrayMove,\r\n  SortableContext,\r\n  UseSortableArguments,\r\n} from '@dnd-kit/sortable';\r\n\r\nimport {\r\n  buildTree,\r\n  findItemDeep,\r\n  flattenTree,\r\n  getChildCount,\r\n  getProjection,\r\n  removeChildrenOf,\r\n  removeItem,\r\n  setProperty,\r\n} from './utilities';\r\nimport type {\r\n  FlattenedItem,\r\n  ItemChangedReason,\r\n  SensorContext,\r\n  TreeItemComponentType,\r\n  TreeItems,\r\n} from './types';\r\n// import { sortableTreeKeyboardCoordinates } from './keyboardCoordinates';\r\nimport { SortableTreeItem } from './SortableTreeItem';\r\nimport { customListSortingStrategy } from './SortingStrategy';\r\n\r\nexport type SortableTreeProps<\r\n  TData extends Record<string, any>,\r\n  TElement extends HTMLElement\r\n> = {\r\n  items: TreeItems<TData>;\r\n  onItemsChanged(\r\n    items: TreeItems<TData>,\r\n    reason: ItemChangedReason<TData>\r\n  ): void;\r\n  TreeItemComponent: TreeItemComponentType<TData, TElement>;\r\n  indentationWidth?: number;\r\n  indicator?: boolean;\r\n  pointerSensorOptions?: PointerSensorOptions;\r\n  disableSorting?: boolean;\r\n  dropAnimation?: DropAnimation | null;\r\n  dndContextProps?: React.ComponentProps<typeof DndContext>;\r\n  sortableProps?: Omit<UseSortableArguments, 'id'>;\r\n  keepGhostInPlace?: boolean;\r\n  canRootHaveChildren?: boolean | ((dragItem: FlattenedItem<TData>) => boolean);\r\n};\r\nconst defaultPointerSensorOptions: PointerSensorOptions = {\r\n  activationConstraint: {\r\n    distance: 3,\r\n  },\r\n};\r\n\r\nexport const dropAnimationDefaultConfig: DropAnimation = {\r\n  keyframes({ transform }) {\r\n    return [\r\n      { opacity: 1, transform: CSS.Transform.toString(transform.initial) },\r\n      {\r\n        opacity: 0,\r\n        transform: CSS.Transform.toString({\r\n          ...transform.final,\r\n          x: transform.final.x + 5,\r\n          y: transform.final.y + 5,\r\n        }),\r\n      },\r\n    ];\r\n  },\r\n  easing: 'ease-out',\r\n  sideEffects({ active }) {\r\n    active.node.animate([{ opacity: 0 }, { opacity: 1 }], {\r\n      duration: defaultDropAnimation.duration,\r\n      easing: defaultDropAnimation.easing,\r\n    });\r\n  },\r\n};\r\n\r\nexport function SortableTree<\r\n  TreeItemData extends Record<string, any>,\r\n  TElement extends HTMLElement = HTMLDivElement\r\n>({\r\n  items,\r\n  indicator,\r\n  indentationWidth = 20,\r\n  onItemsChanged,\r\n  TreeItemComponent,\r\n  pointerSensorOptions,\r\n  disableSorting,\r\n  dropAnimation,\r\n  dndContextProps,\r\n  sortableProps,\r\n  keepGhostInPlace,\r\n  canRootHaveChildren,\r\n  ...rest\r\n}: SortableTreeProps<TreeItemData, TElement>) {\r\n  const [activeId, setActiveId] = useState<UniqueIdentifier | null>(null);\r\n  const [overId, setOverId] = useState<UniqueIdentifier | null>(null);\r\n  const [offsetLeft, setOffsetLeft] = useState(0);\r\n  const [currentPosition, setCurrentPosition] = useState<{\r\n    parentId: UniqueIdentifier | null;\r\n    overId: UniqueIdentifier;\r\n  } | null>(null);\r\n\r\n  const flattenedItems = useMemo(() => {\r\n    const flattenedTree = flattenTree(items);\r\n    const collapsedItems = flattenedTree.reduce<UniqueIdentifier[]>(\r\n      (acc, { children, collapsed, id }) =>\r\n        collapsed && children?.length ? [...acc, id] : acc,\r\n      []\r\n    );\r\n\r\n    const result = removeChildrenOf(\r\n      flattenedTree,\r\n      activeId ? [activeId, ...collapsedItems] : collapsedItems\r\n    );\r\n    return result;\r\n  }, [activeId, items]);\r\n  const projected = getProjection(\r\n    flattenedItems,\r\n    activeId,\r\n    overId,\r\n    offsetLeft,\r\n    indentationWidth,\r\n    keepGhostInPlace ?? false,\r\n    canRootHaveChildren\r\n  );\r\n  const sensorContext: SensorContext<TreeItemData> = useRef({\r\n    items: flattenedItems,\r\n    offset: offsetLeft,\r\n  });\r\n  // const [coordinateGetter] = useState(() =>\r\n  //   sortableTreeKeyboardCoordinates(sensorContext, indentationWidth)\r\n  // );\r\n  const sensors = useSensors(\r\n    useSensor(\r\n      PointerSensor,\r\n      pointerSensorOptions ?? defaultPointerSensorOptions\r\n    )\r\n    // useSensor(KeyboardSensor, {\r\n    //   coordinateGetter,\r\n    // })\r\n  );\r\n\r\n  const sortedIds = useMemo(\r\n    () => flattenedItems.map(({ id }) => id),\r\n    [flattenedItems]\r\n  );\r\n  const activeItem = activeId\r\n    ? flattenedItems.find(({ id }) => id === activeId)\r\n    : null;\r\n\r\n  useEffect(() => {\r\n    sensorContext.current = {\r\n      items: flattenedItems,\r\n      offset: offsetLeft,\r\n    };\r\n  }, [flattenedItems, offsetLeft]);\r\n\r\n  const itemsRef = useRef(items);\r\n  itemsRef.current = items;\r\n  const handleRemove = useCallback(\r\n    (id: string) => {\r\n      const item = findItemDeep(itemsRef.current, id)!;\r\n      onItemsChanged(removeItem(itemsRef.current, id), {\r\n        type: 'removed',\r\n        item,\r\n      });\r\n    },\r\n    [onItemsChanged]\r\n  );\r\n\r\n  const handleCollapse = useCallback(\r\n    function handleCollapse(id: string) {\r\n      const item = findItemDeep(itemsRef.current, id)!;\r\n      onItemsChanged(\r\n        setProperty(itemsRef.current, id, 'collapsed', ((value: boolean) => {\r\n          return !value;\r\n        }) as any),\r\n        {\r\n          type: item.collapsed ? 'collapsed' : 'expanded',\r\n          item: item,\r\n        }\r\n      );\r\n    },\r\n    [onItemsChanged]\r\n  );\r\n\r\n  const announcements: Announcements = useMemo(\r\n    () => ({\r\n      onDragStart({ active }) {\r\n        return `Picked up ${active.id}.`;\r\n      },\r\n      onDragMove({ active, over }) {\r\n        return getMovementAnnouncement('onDragMove', active.id, over?.id);\r\n      },\r\n      onDragOver({ active, over }) {\r\n        return getMovementAnnouncement('onDragOver', active.id, over?.id);\r\n      },\r\n      onDragEnd({ active, over }) {\r\n        return getMovementAnnouncement('onDragEnd', active.id, over?.id);\r\n      },\r\n      onDragCancel({ active }) {\r\n        return `Moving was cancelled. ${active.id} was dropped in its original position.`;\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  const strategyCallback = useCallback(() => {\r\n    return !!projected;\r\n  }, [projected]);\r\n  return (\r\n    <DndContext\r\n      accessibility={{ announcements }}\r\n      sensors={disableSorting ? undefined : sensors}\r\n      modifiers={indicator ? modifiersArray : undefined}\r\n      collisionDetection={closestCenter}\r\n      // measuring={measuring}\r\n      onDragStart={disableSorting ? undefined : handleDragStart}\r\n      onDragMove={disableSorting ? undefined : handleDragMove}\r\n      onDragOver={disableSorting ? undefined : handleDragOver}\r\n      onDragEnd={disableSorting ? undefined : handleDragEnd}\r\n      onDragCancel={disableSorting ? undefined : handleDragCancel}\r\n      {...dndContextProps}\r\n    >\r\n      <SortableContext\r\n        items={sortedIds}\r\n        strategy={\r\n          disableSorting\r\n            ? undefined\r\n            : customListSortingStrategy(strategyCallback)\r\n        }\r\n      >\r\n        {flattenedItems.map((item) => {\r\n          return (\r\n            <SortableTreeItem\r\n              {...rest}\r\n              key={item.id}\r\n              id={item.id as any}\r\n              item={item}\r\n              childCount={item.children?.length}\r\n              depth={\r\n                item.id === activeId && projected && !keepGhostInPlace\r\n                  ? projected.depth\r\n                  : item.depth\r\n              }\r\n              indentationWidth={indentationWidth}\r\n              indicator={indicator}\r\n              collapsed={Boolean(item.collapsed && item.children?.length)}\r\n              onCollapse={item.children?.length ? handleCollapse : undefined}\r\n              onRemove={handleRemove}\r\n              isLast={\r\n                item.id === activeId && projected\r\n                  ? projected.isLast\r\n                  : item.isLast\r\n              }\r\n              parent={\r\n                item.id === activeId && projected\r\n                  ? projected.parent\r\n                  : item.parent\r\n              }\r\n              TreeItemComponent={TreeItemComponent}\r\n              disableSorting={disableSorting}\r\n              sortableProps={sortableProps}\r\n              keepGhostInPlace={keepGhostInPlace}\r\n            />\r\n          );\r\n        })}\r\n        {createPortal(\r\n          <DragOverlay\r\n            dropAnimation={\r\n              dropAnimation === undefined\r\n                ? dropAnimationDefaultConfig\r\n                : dropAnimation\r\n            }\r\n          >\r\n            {activeId && activeItem ? (\r\n              <TreeItemComponent\r\n                {...rest}\r\n                item={activeItem}\r\n                children={[]}\r\n                depth={activeItem.depth}\r\n                clone\r\n                childCount={getChildCount(items, activeId) + 1}\r\n                indentationWidth={indentationWidth}\r\n                isLast={false}\r\n                parent={activeItem.parent}\r\n                isOver={false}\r\n                isOverParent={false}\r\n              />\r\n            ) : null}\r\n          </DragOverlay>,\r\n          document.body\r\n        )}\r\n      </SortableContext>\r\n    </DndContext>\r\n  );\r\n\r\n  function handleDragStart({ active: { id: activeId } }: DragStartEvent) {\r\n    setActiveId(activeId);\r\n    setOverId(activeId);\r\n\r\n    const activeItem = flattenedItems.find(({ id }) => id === activeId);\r\n\r\n    if (activeItem) {\r\n      setCurrentPosition({\r\n        parentId: activeItem.parentId,\r\n        overId: activeId,\r\n      });\r\n    }\r\n\r\n    document.body.style.setProperty('cursor', 'grabbing');\r\n  }\r\n\r\n  function handleDragMove({ delta }: DragMoveEvent) {\r\n    setOffsetLeft(delta.x);\r\n  }\r\n\r\n  function handleDragOver({ over }: DragOverEvent) {\r\n    setOverId(over?.id ?? null);\r\n  }\r\n\r\n  function handleDragEnd({ active, over }: DragEndEvent) {\r\n    resetState();\r\n\r\n    if (projected && over) {\r\n      const { depth, parentId } = projected;\r\n      if (keepGhostInPlace && over.id === active.id) return;\r\n      const clonedItems: FlattenedItem<TreeItemData>[] = flattenTree(items);\r\n      const overIndex = clonedItems.findIndex(({ id }) => id === over.id);\r\n      const activeIndex = clonedItems.findIndex(({ id }) => id === active.id);\r\n      const activeTreeItem = clonedItems[activeIndex];\r\n\r\n      clonedItems[activeIndex] = { ...activeTreeItem, depth, parentId };\r\n      const draggedFromParent = activeTreeItem.parent;\r\n      const sortedItems = arrayMove(clonedItems, activeIndex, overIndex);\r\n      const newItems = buildTree(sortedItems);\r\n      const newActiveItem = sortedItems.find((x) => x.id === active.id)!;\r\n      const currentParent = newActiveItem.parentId\r\n        ? sortedItems.find((x) => x.id === newActiveItem.parentId)!\r\n        : null;\r\n      // removing setTimeout leads to an unwanted scrolling\r\n      // Use case:\r\n      //   There are a lot of items in a tree (so that the scroll exists).\r\n      //   You take the node from the bottom and move it to the top\r\n      //   Without `setTimeout` when you drop the node the list gets scrolled to the bottom.\r\n      setTimeout(() =>\r\n        onItemsChanged(newItems, {\r\n          type: 'dropped',\r\n          draggedItem: newActiveItem,\r\n          draggedFromParent: draggedFromParent,\r\n          droppedToParent: currentParent,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  function handleDragCancel() {\r\n    resetState();\r\n  }\r\n\r\n  function resetState() {\r\n    setOverId(null);\r\n    setActiveId(null);\r\n    setOffsetLeft(0);\r\n    setCurrentPosition(null);\r\n\r\n    document.body.style.setProperty('cursor', '');\r\n  }\r\n\r\n  function getMovementAnnouncement(\r\n    eventName: string,\r\n    activeId: UniqueIdentifier,\r\n    overId?: UniqueIdentifier\r\n  ) {\r\n    if (overId && projected) {\r\n      if (eventName !== 'onDragEnd') {\r\n        if (\r\n          currentPosition &&\r\n          projected.parentId === currentPosition.parentId &&\r\n          overId === currentPosition.overId\r\n        ) {\r\n          return;\r\n        } else {\r\n          setCurrentPosition({\r\n            parentId: projected.parentId,\r\n            overId,\r\n          });\r\n        }\r\n      }\r\n\r\n      const clonedItems: FlattenedItem<TreeItemData>[] = flattenTree(items);\r\n      const overIndex = clonedItems.findIndex(({ id }) => id === overId);\r\n      const activeIndex = clonedItems.findIndex(({ id }) => id === activeId);\r\n      const sortedItems = arrayMove(clonedItems, activeIndex, overIndex);\r\n\r\n      const previousItem = sortedItems[overIndex - 1];\r\n\r\n      let announcement;\r\n      const movedVerb = eventName === 'onDragEnd' ? 'dropped' : 'moved';\r\n      const nestedVerb = eventName === 'onDragEnd' ? 'dropped' : 'nested';\r\n\r\n      if (!previousItem) {\r\n        const nextItem = sortedItems[overIndex + 1];\r\n        announcement = `${activeId} was ${movedVerb} before ${nextItem.id}.`;\r\n      } else {\r\n        if (projected.depth > previousItem.depth) {\r\n          announcement = `${activeId} was ${nestedVerb} under ${previousItem.id}.`;\r\n        } else {\r\n          let previousSibling: FlattenedItem<TreeItemData> | undefined =\r\n            previousItem;\r\n          while (previousSibling && projected.depth < previousSibling.depth) {\r\n            const parentId: UniqueIdentifier | null = previousSibling.parentId;\r\n            previousSibling = sortedItems.find(({ id }) => id === parentId);\r\n          }\r\n\r\n          if (previousSibling) {\r\n            announcement = `${activeId} was ${movedVerb} after ${previousSibling.id}.`;\r\n          }\r\n        }\r\n      }\r\n\r\n      return announcement;\r\n    }\r\n\r\n    return;\r\n  }\r\n}\r\n\r\nconst adjustTranslate: Modifier = ({ transform }) => {\r\n  return {\r\n    ...transform,\r\n    y: transform.y - 25,\r\n  };\r\n};\r\nconst modifiersArray = [adjustTranslate];\r\n"],"names":["SimpleTreeItemWrapper","forwardRef","props","ref","clone","depth","disableSelection","disableInteraction","disableSorting","ghost","handleProps","indentationWidth","indicator","collapsed","onCollapse","onRemove","wrapperRef","style","hideCollapseButton","childCount","manualDrag","showDragHandle","disableCollapseOnItemClick","isLast","className","contentClassName","isOver","rest","React","clsx","paddingLeft","undefined","onClick","e","preventDefault","children","flattenParents","parent","FolderTreeItemWrapper","flattenedParents","map","item","key","id","iOS","window","test","navigator","platform","getDragDepth","offset","Math","round","_revertLastChanges","getProjection","items","activeId","overId","dragOffset","keepGhostInPlace","canRootHaveChildren","overItemIndex","findIndex","activeItemIndex","activeItem","findParentWhichCanHaveChildren","parentId","newItems","arrayMove","previousItem","nextItem","dragDepth","projectedDepth","directParent","findParentWithDepth","maxDepth","minDepth","getParentId","dragItem","rootCanHaveChildren","canHaveChildren","newParent","slice","reverse","find","flatten","reduce","acc","index","flattenedItem","length","flattenTree","buildTree","flattenedItems","root","nodes","findItem","push","itemId","findItemDeep","child","removeItem","setProperty","property","setter","countChildren","count","getChildCount","removeChildrenOf","ids","excludeParentIds","filter","includes","getIsOverParent","animateLayoutChanges","isSorting","isDragging","SortableTreeItemNotMemoized","SortableTreeItem","TreeItemComponent","sortableProps","useSortable","disabled","attributes","listeners","setDraggableNodeRef","setDroppableNodeRef","transform","transition","over","isOverParent","useMemo","CSS","Translate","toString","localCollapse","localRemove","memo","customListSortingStrategy","isValid","sortingStrategy","activeIndex","activeNodeRect","rects","overIndex","verticalListSortingStrategy","defaultPointerSensorOptions","activationConstraint","distance","dropAnimationDefaultConfig","keyframes","opacity","Transform","initial","x","y","easing","sideEffects","active","node","animate","duration","defaultDropAnimation","SortableTree","onItemsChanged","pointerSensorOptions","dropAnimation","dndContextProps","useState","setActiveId","setOverId","offsetLeft","setOffsetLeft","currentPosition","setCurrentPosition","flattenedTree","collapsedItems","result","projected","sensorContext","useRef","sensors","useSensors","useSensor","PointerSensor","sortedIds","useEffect","current","itemsRef","handleRemove","useCallback","type","handleCollapse","value","announcements","onDragStart","onDragMove","getMovementAnnouncement","onDragOver","onDragEnd","onDragCancel","strategyCallback","DndContext","accessibility","modifiers","modifiersArray","collisionDetection","closestCenter","handleDragStart","handleDragMove","handleDragOver","handleDragEnd","handleDragCancel","SortableContext","strategy","Boolean","createPortal","DragOverlay","document","body","delta","resetState","clonedItems","activeTreeItem","draggedFromParent","sortedItems","newActiveItem","currentParent","setTimeout","draggedItem","droppedToParent","eventName","announcement","movedVerb","nestedVerb","previousSibling","adjustTranslate"],"mappings":"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"}